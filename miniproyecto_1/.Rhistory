setwd("C:\\Users\\sampi\\OneDrive\\Documentos\\UAO\\semestre_5\\Estadistica_2\\Stadistic")
data <- read.xlsx("Caso.xlsx")
library(dplyr)
muestra <- data %>% sample_n(size = 40, replace = FALSE)
View(muestra)
#Directorio de trabajo
setwd("C:\\Users\\sampi\\OneDrive\\Documentos\\UAO\\semestre_5\\Estadistica_2\\Stadistic")
data <- read.xlsx("Caso.xlsx")
muestra <- data %>% sample_n(size = 40, replace = FALSE)
library(corrplot)
corrplot(cor(data), method="number")
View(muestra)
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#0.05 alpha
m2 <- lm(R ~ ED + X, data = muestra)
summary(m2)
library(openxlsx)
library(dplyr)
library(corrplot)
#Limpiar área de trabajo
rm(list = ls())
#Directorio de trabajo
setwd("C:\\Users\\sampi\\OneDrive\\Documentos\\UAO\\semestre_5\\Estadistica_2\\Stadistic")
data <- read.xlsx("Caso.xlsx")
muestra <- data %>% sample_n(size = 40, replace = FALSE)
corrplot(cor(muestra), method="number")
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#0.05 alpha
m2 <- lm(R ~ AGE + ED + EX0 + X + U2, data = muestra)
summary(m2)
m3 <- lm(R ~ AGE + ED + EX0 + X , data = muestra)
summary(m3)
m3 <- lm(R ~ ED + EX0 + X , data = muestra)
summary(m3)
m3 <- lm(R ~ AGE + ED + EX0 + X , data = muestra)
summary(m3)
m3 <- lm(R ~ ED + EX0 + X + U2, data = muestra)
m3 <- lm(R ~ ED + EX0 + X + U2, data = muestra)
summary(m3)
m3 <- lm(R ~ AGE + EX0 + X + U2, data = muestra)
summary(m3)
m3 <- lm(R ~ AGE + ED + EX0 + U2, data = muestra)
summary(m3)
m3 <- lm(R ~ AGE + ED + X + U2, data = muestra)
summary(m3)
m4 <- lm(R ~ ED + EX0, data = muestra)
summary(m4)
#Limpiar área de trabajo
rm(list = ls())
#Limpiar área de trabajo
rm(list = ls())
library(openxlsx)
library(dplyr)
library(corrplot)
#Limpiar área de trabajo
rm(list = ls())
#Directorio de trabajo
setwd("C:\\Users\\sampi\\OneDrive\\Documentos\\UAO\\semestre_5\\Estadistica_2\\Stadistic")
data <- read.xlsx("Caso.xlsx")
set.seed(1)
muestra <- data %>% sample_n(size = 40, replace = FALSE)
View(muestra)
corrplot(cor(muestra), method="number")
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ ED + EX0 + X, data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ AGE + EX0 + X, data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ AGE + ED + X, data = muestra)
summary(m2)
+ EX0
+ EX0
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 , data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ AGE + EX0 , data = muestra)
summary(m2)
residuales <- m2$residuals
#Media cero
t.test(residuales)
#Media cero
t.test(residuales)
#Normalidad
shapiro.test(residuales)
?shapiro.test
library(randtests)
#Independencia
runs.test(residuales) #p-value = 0.5023 se cumple el supuesto de independencia
install.packages(lmtest)
install.packages("lmtest")
library(lmtest)
#Homogeneidad
bptest(m2)
library(skedastic)
#Homogeneidad
homoge <- white_lm(m2)
library(skedastic)
#Homogeneidad
homoge <- white_lm(m2)
#Homogeneidad
homoge <- white(m2)
homoge
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
corrplot(cor(muestra), method="number")
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
residuales <- m2$residuals
#Media cero
t.test(residuales)
#Normalidad
shapiro.test(residuales)
#Independencia
runs.test(residuales) #p-value = 0.5023 se cumple el supuesto de independencia
#Homogeneidad
homoge <- white(m2)
homoge
summary(m2)
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
set.seed(64)
#Limpiar área de trabajo
rm(list = ls())
library(openxlsx)
library(dplyr)
library(corrplot)
library(randtests)
library(lmtest)
library(randtests)
library(skedastic)
library(randtests)
library(openxlsx)
library(dplyr)
library(corrplot)
library(randtests)
library(skedastic)
#Limpiar área de trabajo
rm(list = ls())
#Directorio de trabajo
setwd("C:\\Users\\sampi\\OneDrive\\Documentos\\UAO\\semestre_5\\Estadistica_2\\Stadistic")
data <- read.xlsx("Caso.xlsx")
set.seed(64)
muestra <- data %>% sample_n(size = 40, replace = FALSE)
corrplot(cor(muestra), method="number")
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Limpiar área de trabajo
rm(list = ls())
#Directorio de trabajo
setwd("C:\\Users\\sampi\\OneDrive\\Documentos\\UAO\\semestre_5\\Estadistica_2\\Stadistic")
data <- read.xlsx("Caso.xlsx")
set.seed(1)
muestra <- data %>% sample_n(size = 40, replace = FALSE)
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
set.seed(7)
muestra <- data %>% sample_n(size = 40, replace = FALSE)
corrplot(cor(muestra), method="number")
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#Modelo 2
m2 <- lm(R ~ AGE + ED + X, data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ AGE + ED  data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ AGE + ED,  data = muestra)
summary(m2)
set.seed(1)
muestra <- data %>% sample_n(size = 40, replace = FALSE)
corrplot(cor(muestra), method="number")
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Homogeneidad
homoge <- white(m2)
View(homoge)
View(homoge)
library(skedastic)
library(randtests)
View(muestra)
#Media cero
t.test(residuales)
residuales <- m2$residuals
#Media cero
t.test(residuales)
#Normalidad
shapiro.test(residuales)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
summary(m2)
#Modelo 2
m2 <- lm(R ~ ED + EX0 + X, data = muestra)
summary(m2)
AGE +
AGE +
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Media cero
t.test(residuales)
m3 <- lm(R ~ AGE + EX0 + X,data = muestra)
summary(m3)
residuales <- m3$residuals
#Media cero
t.test(residuales)
#Normalidad
shapiro.test(residuales)
vif(mod3)
library(car)
#Homogeneidad
homoge <- white(m2)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Homogeneidad
homoge <- white(m2)
View(homoge)
vif(mod2)
vif(mod2)
vif(m2)
vif(m3)
#Independencia
runs.test(residuales) #p-value = 0.5023 se cumple el supuesto de independencia
library(openxlsx)
library(dplyr)
library(corrplot)
library(randtests)
library(skedastic)
library(car)
#Limpiar área de trabajo
rm(list = ls())
#Directorio de trabajo
setwd("C:\\Users\\sampi\\OneDrive\\Documentos\\UAO\\semestre_5\\Estadistica_2\\Stadistic")
data <- read.xlsx("Caso.xlsx")
set.seed(1)
muestra <- data %>% sample_n(size = 40, replace = FALSE)
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
m3 <- lm(R ~ AGE + EX0 + X,data = muestra)
summary(m3)
vif(m2)
vif(m3)
vif(m1)
#Independencia
runs.test(residuales) #p-value = 0.5023 se cumple el supuesto de independencia
residuales <- m3$residuals
#Independencia
runs.test(residuales) #p-value = 0.5023 se cumple el supuesto de independencia
residuales <- m2$residuals
#Independencia
runs.test(residuales) #p-value = 0.5023 se cumple el supuesto de independencia
vif(m2)
vif(m2)
#Media cero
t.test(residuales)
data_predict <- data.frame(pred = predict(m2), actual = data$R)
data_predict <- data.frame(pred = predict(m2), actual = muestra$R)
View(data_predict)
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
#Modelo 3
m3 <- lm(R ~ AGE + EX0 + X,data = muestra)
summary(m3)
#Modelo 4
m4 <- lm(R ~ AGE + EX0 + X, data = muestra)
summary(m4)
#Modelo 3
m3 <- lm(R ~ AGE + EX0 + ED,data = muestra)
summary(m3)
#Modelo 1
m1 <- lm(R ~ ., data = muestra)
summary(m1)
ECM_m1 <- sum(m1$residuals^2)/length(m1$residuals)
RECM_m1 <- sqrt(ECM_m1)
RECM_m1
#Modelo 2
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
ECM_m2 <- sum(m2$residuals^2)/length(m2$residuals)
RECM_m2 <- sqrt(ECM_m2)
RECM_m2
#Modelo 3
m3 <- lm(R ~ AGE + EX0 + ED,data = muestra)
summary(m3)
ECM_m3 <- sum(m3$residuals^2)/length(m3$residuals)
RECM_m3 <- sqrt(ECM_m3)
RECM_m3
ECM_m4 <- sum(m4$residuals^2)/length(m4$residuals)
RECM_m4 <- sqrt(ECM_m4)
View(RECM_m4)
RECM_m4
install.packages('AICcmodavg')
library(AICcmodavg)
models <- list(m1, m2, m3, m4)
#specify model names
mod.names <- c('.', 'AGE.ED.EX0.X', 'AGE.ED.EX0', 'AGE.EX0.X')
#calculate AIC of each model
aictab(cand.set = models, modnames = mod.names)
install.packages('flexmix')
library(flexmix)
BIC(m1)
BIC(m2)
BIC(m3)
BIC(m4)
#Media cero
t.test(residuales)
# Obtener los residuales del Modelo 2
residuales <- m2$residuals
# Prueba de media cero en los residuales
t.test(residuales)
# Prueba de normalidad en los residuales
shapiro.test(residuales)
# Prueba de independencia de los residuales
runs.test(residuales)  # p-value = 0.5023, el supuesto de independencia se cumple
# Cálculo de los VIF (Varianza de la Inflación) para detectar multicolinealidad
vif(m2)
hist(residuales)
# Modelo 2: Regresión lineal con variables seleccionadas en el Modelo 1
m2 <- lm(R ~ AGE + ED + EX0 + X, data = muestra)
summary(m2)
summary(m1)
summary(m2)
library(tidyverse)
library(lubridate)
library(fpp2)
library(zoo)
library(dplyr)
df <- data.frame(
mes = c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "January", "February"),
año = c(2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2014, 2014),
ventas = c(110, 114, 123, 131, 140, 146, 157, 164, 169, 180, 184, 191, NA, NA)
)
# Crear una nueva columna "fecha"
df$fecha <- as.Date(paste(df$año, match(df$mes, month.name), "01", sep = "-"), format = "%Y-%m-%d")
df <- subset(df, select = -c(mes, año))
#Medias Moviles
calcular_media_movil <- function(datos, n) {
if (length(datos) < n) {
stop("El tamaño de la ventana es mayor que la longitud de los datos.")
}
medias_moviles <- rep(NA, length(datos))
for (i in n:length(datos)) {
if (is.na(datos[i])) {
# Si hay un NA en datos, toma el valor de la posición anterior de medias_moviles
datos[i] <- medias_moviles[i]
}
# Calcular la media móvil normalmente
medias_moviles[i + 1] <- mean(datos[i:(i - n + 1)])
}
medias_moviles <- medias_moviles[1:14]
return(medias_moviles)
}
calcular_media_movil(df$ventas, 4)
df <- df %>%
mutate(
ventas_2 = calcular_media_movil(ventas, 2),
ventas_3 = calcular_media_movil(ventas, 3),
ventas_4 = calcular_media_movil(ventas, 4)
) %>%
select(fecha, ventas, ventas_2, ventas_3, ventas_4)
?vif
vif?
library(openxlsx)
library(openxlsx)
library(dplyr)
library(ggplot2)
library(flexmix)
library(MASS)
library(corrplot)
library(data.table)
library(Metrics)
setwd("C:\\Users\\sampi\\OneDrive\\Documentos\\UAO\\semestre_5\\Estadistica_2\\Stadistic\\miniproyecto_1")
cars_df <- fread("data.csv")
names(cars_df)
#Seleccionar Variables
cars_analysis <- cars_df %>%
dplyr::select(
daysonmarket,
#    frame_damaged,
horsepower,
#    is_new,
maximum_seating,
mileage,
price,
seller_rating,
year
)
#Matriz de Correlación
corrplot(cor(cars_analysis))
cor(cars_analysis)
cor.test(cars_analysis$price, cars_analysis$seller_rating)
#Análisis descriptivo
resumen <- cars_analysis %>%
summarise(Promedio = mean(price, na.rm = T),
DE = sd(price, na.rm = T),
Mediana = median(price, na.rm = T),
CV = DE/Promedio*100,
Minimo = min(price, na.rm = T),
Maximo = max(price, na.rm = T))
resumen
# Seleccionar una muestra para el entrenamiento y los tests
set.seed(1)
muestra_entrenamiento <- cars_analysis %>%
sample_frac(size = 0.8, replace = FALSE)
muestra_prueba <- cars_analysis %>%
anti_join(muestra_entrenamiento)
modelo_lineal2 <- lm(price ~ year + mileage + horsepower , data = muestra_entrenamiento)
summary(modelo_lineal2)
vif(modelo_lineal2)
library(openxlsx)    # Para leer el archivo xlsx
library(dplyr)       # Para manipulación de datos
library(corrplot)    # Para graficar la matriz de correlación
library(randtests)   # Para pruebas de normalidad
library(skedastic)   # Para pruebas de homocedasticidad
library(car)         # Para pruebas de regresión
library(AICcmodavg)  # Para cálculo del AIC corregido
library(flexmix)
# Cálculo de los VIF (Varianza de la Inflación) para detectar multicolinealidad
vif(m2)
?vif
library(car)
vif(modelo_lineal2)
modelo_lineal1 <- lm(price ~ year + mileage + maximum_seating + horsepower , data = muestra_entrenamiento)
summary(modelo_lineal1)
vif(modelo_lineal1)
predictions <- data.frame(
Price = muestra_prueba$price,
Modelo1 = predict(modelo_lineal1, newdata = muestra_prueba, type = "response"),
Modelo2 = predict(modelo_lineal2, newdata = muestra_prueba, type = "response"),
Modelo3 = predict(modelo_lineal3, newdata = muestra_prueba, type = "response")
)
modelo_lineal1 <- lm(price ~ year + mileage + maximum_seating + horsepower , data = muestra_entrenamiento)
summary(modelo_lineal1)
vif(modelo_lineal1)
modelo_lineal2 <- lm(price ~ year + mileage + horsepower , data = muestra_entrenamiento)
summary(modelo_lineal2)
vif(modelo_lineal2)
modelo_lineal3 <- lm(price ~ year + mileage + horsepower + daysonmarket, data = muestra_entrenamiento)
summary(modelo_lineal3)
modelo_lineal4 <- lm(price ~ year + mileage, data = muestra_entrenamiento)
summary(modelo_lineal4)
tabla_resultados <- data.frame(
Modelo = c("modelo_lineal1", "modelo_lineal2", "modelo_lineal3"),
BIC = c(BIC(modelo_lineal1), BIC(modelo_lineal2), BIC(modelo_lineal3)),
AIC = c(AIC(modelo_lineal1), AIC(modelo_lineal2), AIC(modelo_lineal3)),
RMSE = c(rmse(cars_analysis$price, predict(modelo_lineal1,cars_analysis)), rmse(cars_analysis$price, predict(modelo_lineal2,cars_analysis)), rmse(cars_analysis$price, predict(modelo_lineal3,cars_analysis))))
tabla_resultados
predictions <- data.frame(
Price = muestra_prueba$price,
Modelo1 = predict(modelo_lineal1, newdata = muestra_prueba, type = "response"),
Modelo2 = predict(modelo_lineal2, newdata = muestra_prueba, type = "response"),
Modelo3 = predict(modelo_lineal3, newdata = muestra_prueba, type = "response")
)
View(predictions)
summary(modelo_lineal2)
min(predictions$Modelo2)
